<PUBLIC:COMPONENT tagName="INV" lightWeight="true">
    <PUBLIC:ATTACH event="ondocumentready" onevent="document_onready();">
    <PUBLIC:PROPERTY name="isReady" value="false">
    <PUBLIC:PROPERTY name="mode" get="getMode" put="setMode">
    <PUBLIC:PROPERTY name="rowCount" get="getRowCount">
    <PUBLIC:PROPERTY name="valid" get="getValid">
    <PUBLIC:METHOD name="addInventor">
    <PUBLIC:METHOD name="addList">
</PUBLIC:COMPONENT>

<META http-equiv="Content-Type" content="text/x-component; charset=utf-8">
<SCRIPT language="JScript">
var ds_main;
var ds_main_id;

if (element.id.substr(0, 4) == "any_") {
    ds_main_id = "ds_" + element.id.substr(4);
} else {
    ds_main_id = "ds_" + element.id;
}

var control_id = element.id + "_" + element.sourceIndex;

var ds_search;
var ds_search_id = "ds_search_"  + control_id;

var txt_search;
var txt_search_id = "txt_search_" + control_id;

var btn_add;
var btn_add_id = "btn_add_" + control_id;

var btn_del;
var btn_del_id = "btn_del_" + control_id;

var btn_cal;
var btn_cal_id = "btn_cal_" + control_id;

var chk_all;
var chk_all_id = "chk_all_" + control_id;

var tbd_main;
var tbd_main_id = "tbd_main_" + control_id;

var tr_main;
var tr_main_id = "tr_main_" + control_id;

var chk_del;
var chk_del_id = "chk_del_" + control_id;

var rdo_main;
var rdo_main_id = "rdo_main_" + control_id;

var txt_quota;
var txt_quota_id = "txt_quota_" + control_id;

var gMode = "R";
var gMode2 = "R";

function document_onready()
{
    if (element.document.media == "print") return;

    ds_main = element.document.createElement('<ANY:DS id="' + ds_main_id + '">');
    element.document.appendChild(ds_main);

    ds_main.OnInit = function()
    {
        ds_main.setKeys("USER_ID");
        ds_main.addBind("USER_ID", tr_main_id, "USER_ID");
        ds_main.addBind("IN_INVENTOR_YN", tr_main_id, "IN_INVENTOR_YN");
        ds_main.addBind("MAIN_INVENTOR_YN", rdo_main_id, "checkedValue");
        ds_main.addBind("QUOTA_RATIO", txt_quota_id);
    }

    ds_main.OnLoad = function()
    {
        makeHTML();
    }

    ds_search = element.document.createElement('<ANY:DS id="' + ds_search_id + '">');
    element.document.appendChild(ds_search);

    makeHTML();

    element.isReady = true;
}

function makeHTML()
{
    var html = new Array();

    if (gMode2 != "R") {
        html.push('<TABLE border="0" cellspacing="0" cellpadding="0" width="100%">');
        html.push('    <TR>');
        html.push('        <TD width="100%">');
        html.push('            <INPUT type="text" id="' + txt_search_id + '" class="text">');
        html.push('        </TD>');
        html.push('        <TD noWrap>');
        html.push('            <BUTTON id="' + btn_add_id + '" text="Add"    width="50px" space="left:2">');
        html.push('            <BUTTON id="' + btn_del_id + '" text="Delete" width="50px" space="left:2">');
        html.push('            <BUTTON auto="line">');
        html.push('            <BUTTON id="' + btn_cal_id + '" text="지분율 자동계산" hpad="5">');
        html.push('        </TD>');
        html.push('    </TR>');
        html.push('</TABLE>');
    }

    html.push('<TABLE border="0" cellspacing="1" cellpadding="0" class="main">');
    html.push('    <TR style="cursor:default;">');
    if (gMode2 != "R") {
        html.push('        <TD class="listhead" noWrap width="20px" title="삭제대상 전체선택"><INPUT type="checkbox" id="' + chk_all_id + '" onFocus="this.blur();"></TD>');
    }
    html.push('        <TD class="listhead" noWrap width="20px" title="주발명자 선택">주</TD>');
    html.push('        <TD class="listhead" noWrap width="10%">사번</TD>');
    html.push('        <TD class="listhead" noWrap width="10%">성명(국)</TD>');
    html.push('        <TD class="listhead" noWrap width="20%">성명(영)</TD>');
    html.push('        <TD class="listhead" noWrap width="10%">성명(한)</TD>');
    html.push('        <TD class="listhead" noWrap width="20%">팀</TD>');
    html.push('        <TD class="listhead" noWrap width="10%">직위</TD>');
    html.push('        <TD class="listhead" noWrap width="40%">주소</TD>');
    html.push('        <TD class="listhead" noWrap width="10%">지분율</TD>');
    html.push('        <TD class="listhead" noWrap width="5%" title="내부/외부사원 구분">내외</TD>');
    html.push('    </TR>');
    html.push('    <COLGROUP>');
    for (var i = 0; i < 11; i++) {
        html.push('        <COL class="listdata">');
    }
    html.push('    </COLGROUP>');
    html.push('    <TBODY id="' + tbd_main_id + '"></TBODY>');
    html.push('</TABLE>');

    element.innerHTML = html.join("\n");

    txt_search = element.document.getElementById(txt_search_id);
    btn_add = element.document.getElementById(btn_add_id);
    btn_del = element.document.getElementById(btn_del_id);
    btn_cal = element.document.getElementById(btn_cal_id);
    chk_all = element.document.getElementById(chk_all_id);
    tbd_main = element.document.getElementById(tbd_main_id);
    tr_main = element.document.getElementsByName(tr_main_id);
    chk_del = element.document.getElementsByName(chk_del_id);
    rdo_main = element.document.getElementsByName(rdo_main_id);
    txt_quota = element.document.getElementsByName(txt_quota_id);

    if (gMode2 != "R") {
        txt_search.onkeypress = function()
        {
            if (event.keyCode != 13) return;
            event.keyCode = 0;
            doSearch();
        }

        btn_add.onclick = doSearch;
        btn_del.onclick = doDelete;
        btn_cal.onclick = doCalQuotaRatio;

        chk_all.onclick = function()
        {
            for (var i = 0; i < chk_del.length; i++) {
                if (chk_del[i].disabled == true) continue;
                chk_del[i].checked = chk_all.checked;
            }
        }
    }

    if (gMode == "C1") {
        addInventor("_LOGIN_USER_");
    }

    for (var r = 0; r < ds_main.rowCount; r++) {
        addHTML(ds_main.rowData(r));
    }
}

function getMode()
{
    return gMode;
}

function setMode(val)
{
    if (gMode == val) return;

    gMode = val;
    gMode2 = gMode.substr(0, 1);

    if (element.isReady == true) {
        makeHTML();
    }
}

function getRowCount()
{
    return tr_main.length;
}

function getValid()
{
    if (rdo_main.length == 0) return true;

    if (getMainInventorChecked() != true) {
        alert("주발명자를 선택하세요.");
        rdo_main[0].focus();
        return false;
    }

    var quotaRatioSum = 0;

    for (var r = 0; r < txt_quota.length; r++) {
        if (any.trim(txt_quota[r].value2) == "") {
            alert("지분율을 입력하세요.");
            txt_quota[r].focus();
            return false;
        }
        quotaRatioSum += Number(any.trim(txt_quota[r].value2));
    }

    if (quotaRatioSum != 100) {
        alert("지분율 합계가 100 이 되지 않습니다.");
        txt_quota[0].focus();
        return false;
    }

    return true;

    function getMainInventorChecked()
    {
        for (var i = 0; i < rdo_main.length; i++) {
            if (rdo_main[i].checked == true) return true;
        }
        return false;
    }
}

function doSearch()
{
    var ps = new cfPopupSearch();
    ps.prx.path = top.getRoot() + "/anyfive.ipims.patent.common.popup.search.act.RetrieveInventorSearchList.do";
    ps.win.path = top.getRoot() + "/anyfive/ipims/patent/common/popup/search/InventorSearchListR.jsp";
    ps.win.opt.width = 700;
    ps.win.opt.height = 500;
    ps.searchText = txt_search;
    ps.resultFunc = addData;
    ps.multiCheck = true;
    ps.closePopup = true;
    ps.search();
}

function doDelete()
{
    for (var i = chk_del.length - 1; i >= 0; i--) {
        if (rdo_main[i].checked == true) continue;
        if (chk_del[i].checked != true) continue;
        tbd_main.deleteRow(i);
    }

    for (var i = 0; i < txt_quota.length; i++) {
        txt_quota[i].rowIndex = i;
    }

    chk_all.checked = false;
}

function doCalQuotaRatio()
{
    var invShare = parseInt(100 / txt_quota.length, 10);
    var priShare = 100 - invShare * (txt_quota.length - 1);

    for (var i = 0; i < txt_quota.length; i++) {
        txt_quota[i].value2 = (rdo_main[i].checked == true ? priShare : invShare);
    }
}

function addInventor(userId)
{
    if (userId == null || userId == "") return;

    var prx = new any.proxy();
    prx.path = top.getRoot() + "/anyfive.ipims.patent.common.mapping.inventor.act.RetrieveInventorByUserId.do";
    prx.addParam("_DS_ID_", ds_search_id);
    prx.addParam("USER_ID", userId);

    prx.onSuccess = function()
    {
        if (ds_search.rowCount == 1) {
            addData(ds_search.rowData(0));
        }
    }

    prx.execute();
}

function addList(refId)
{
    if (refId == null || refId == "") return;

    var prx = new any.proxy();
    prx.path = top.getRoot() + "/anyfive.ipims.patent.common.mapping.inventor.act.RetrieveInventorList.do";
    prx.addParam("_DS_ID_", ds_search_id);
    prx.addParam("REF_ID", refId);

    prx.onSuccess = function()
    {
        for (var i = 0; i < ds_search.rowCount; i++) {
            addData(ds_search.rowData(i));
        }
        if (tr_main.length > 0 && rdo_main.length > 0 && getMainInventorRow() == -1) {
            tr_main[0].MAIN_INVENTOR_YN = "1";
            rdo_main[0].checked = true;
            chk_del[0].checked = false;
            chk_del[0].disabled = true;
        }
        function getMainInventorRow()
        {
            for (var i = 0; i < tr_main.length; i++) {
                if (tr_main[i].MAIN_INVENTOR_YN == "1") return i;
            }
            return -1;
        }
    }

    prx.onError = function()
    {
        this.error.show();
    }

    prx.execute();
}

function addData(obj)
{
    if (getExistsRow() != -1) return "exists";

    if (gMode == "C1" && tbd_main.rows.length == 0) {
        obj.MAIN_INVENTOR_YN = "1";
        obj.QUOTA_RATIO = "100";
    } else {
        obj.MAIN_INVENTOR_YN = "0";
        obj.QUOTA_RATIO = "";
    }

    addHTML(obj);

    function getExistsRow()
    {
        if (tr_main == null) return -1;
        for (var i = 0; i < tr_main.length; i++) {
            if (tr_main[i].USER_ID == obj.USER_ID) return i;
        }
        return -1;
    }
}

function addHTML(obj)
{
    var tr, td;
    var idx = tbd_main.rows.length;

    tr = element.document.createElement('<TR id="' + tr_main_id + '">');
    tr.USER_ID = obj.USER_ID;
    tr.IN_INVENTOR_YN = obj.IN_INVENTOR_YN;
    tbd_main.appendChild(tr);

    //삭제 체크박스
    if (gMode2 != "R") {
        td = addCol('<INPUT type="checkbox" name="' + chk_del_id + '" onFocus="this.blur();">', true);
        td.align = "center";
    }

    //주발명자 라디오버튼
    td = addCol('<INPUT type="radio" name="' + rdo_main_id + '" class="checkedvalue" onFocus="this.blur();">', true);
    if (obj.MAIN_INVENTOR_YN == "1") {
        rdo_main[idx].checked = true;
        if (gMode2 != "R") {
            chk_del[idx].checked = false;
            chk_del[idx].disabled = true;
        }
    } else {
        rdo_main[idx].disabled = (gMode2 == "R");
    }
    if (gMode2 != "R") {
        rdo_main[idx].onclick = function()
        {
            for (var i = 0; i < chk_del.length; i++) {
                chk_del[i].disabled = rdo_main[i].checked;
                if (chk_del[i].disabled == true) {
                    chk_del[i].checked = false;
                }
            }
        }
    }
    td.align = "center";

    //사번
    td = addCol(obj.EMP_NO);
    td.noWrap = true;
    td.align = "center";

    //성명(한글)
    td = addCol(obj.EMP_HNAME);
    td.align = "center";

    //성명(영문)
    td = addCol(obj.EMP_ENAME);
    td.align = "center";

    //성명(한문)
    td = addCol(obj.EMP_CNAME);
    td.align = "center";

    //팀
    td = addCol(obj.DEPT_NAME);

    //직위
    td = addCol(obj.POSITION_NAME);

    //주소
    td = addCol(obj.HOME_ADDR);

    //지분율
    if (gMode2 == "R") {
        td = addCol('<SPAN style="text-align:right;">' + (obj.QUOTA_RATIO == null ? '' : obj.QUOTA_RATIO) + '</SPAN>%', true);
        td.align = "right";
    } else {
        td = addCol('<INPUT type="text" id="' + txt_quota_id + '" class="text" format="number(3)" style="width:30px; margin-right:2px;" rowIndex="' + txt_quota.length + '">%', true);
        if (obj.QUOTA_RATIO != null) txt_quota[idx].value = obj.QUOTA_RATIO;
        txt_quota[idx].onkeydown = function()
        {
            var obj;
            switch (event.keyCode) {
                case 38: obj = txt_quota[parseInt(this.rowIndex, 10) - 1]; break;
                case 40: obj = txt_quota[parseInt(this.rowIndex, 10) + 1]; break;
                default: return;
            }
            if (obj == null) return;
            obj.focus();
            obj.select();
        }
        td.align = "center";
    }
    td.noWrap = true;

    //내부/외부
    td = addCol(obj.INOUT_NAME);
    td.align = "center";
    td.noWrap = true;

    function addCol(str, html)
    {
        var td = element.document.createElement('<TD>');
        tr.appendChild(td);

        if (str == null) return td;

        if (html == true) {
            td.innerHTML = str;
        } else {
            td.innerText = str;
        }

        return td;
    }
}
</SCRIPT>
