<?xml version="1.0" encoding="utf-8"?>

<root>

<!-- To Do 건수 조회 -->
<query name="/retrieveToDoCount"><![CDATA[
SELECT '{#ID}' ID, COUNT(1) CNT FROM (
{#LIST_QUERY}
) A
]]></query>
<query name="/retrieveToDoCount/union"><![CDATA[
UNION ALL
SELECT '{#ID}' ID, COUNT(1) CNT FROM (
{#LIST_QUERY}
) A
]]></query>

<!-- To Do 목록 조회 - 결재함 -->
<query name="/retrieveToDoList_APPR"><![CDATA[
SELECT MST.APPR_NO
FROM   TB_APPR_MST MST
     , TB_APPR_REQ REQ
     , TB_APPR_ANS ANS
WHERE  MST.APPR_NO = REQ.APPR_NO
AND    REQ.APPR_NO = ANS.APPR_NO
AND    REQ.REQ_SEQ = ANS.REQ_SEQ
AND    REQ.REQ_STATUS != '7'
AND    ANS.ANS_USER = {@$USER_ID}
AND    ANS.ANS_STATUS = '1'
]]></query>

<!-- To Do 목록 조회 - 평가 -->
<query name="/retrieveToDoList_EVAL"><![CDATA[
SELECT A.*
     , M.REF_NO
     , M.KO_APP_TITLE
     , B.EVAL_TITLE
     , FN_USER_NAME(M.JOB_MAN) JOB_MAN_NAME
     , B.EVAL_VIEW_PATH
FROM   (SELECT A.REF_ID
             , A.PAPER_LIST_SEQ
             , A.EVAL_CODE
             , A.INVDEPT_EVAL_REQ_DATE
             , A.INVDEPT_EVAL_USER
             , FN_USER_NAME(A.INVDEPT_EVAL_USER) INVDEPT_EVAL_USER_NAME
             , A.INVDEPT_EVAL_DATE
             , A.INVDEPT_EVAL_END_YN
             , A.PATDEPT_EVAL_USER
             , FN_USER_NAME(A.PATDEPT_EVAL_USER) PATDEPT_EVAL_USER_NAME
             , A.PATDEPT_EVAL_DATE
             , A.PATDEPT_EVAL_END_YN
             , DECODE(A.INVDEPT_EVAL_SHEET_ID, NULL,'미평가', DECODE(A.PATDEPT_EVAL_SHEET_ID, NULL,'발명부서평가완료', '평가완료')) STATUS_NAME
        FROM   TB_EVAL_COM_MST A
             , V_MASTER_ALL M
        WHERE  A.PAPER_LIST_SEQ IS NULL
        AND    A.REF_ID = M.REF_ID
        UNION ALL
        SELECT A.REF_ID
             , A.LIST_SEQ PAPER_LIST_SEQ
             , B.EVAL_CODE
             , C.INVDEPT_EVAL_REQ_DATE
             , C.INVDEPT_EVAL_USER
             , FN_USER_NAME(C.INVDEPT_EVAL_USER) INVDEPT_EVAL_USER_NAME
             , C.INVDEPT_EVAL_DATE
             , C.INVDEPT_EVAL_END_YN
             , C.PATDEPT_EVAL_USER
             , FN_USER_NAME(C.PATDEPT_EVAL_USER) PATDEPT_EVAL_USER_NAME
             , C.PATDEPT_EVAL_DATE
             , C.PATDEPT_EVAL_END_YN
             , FN_BIZ_CODE_NAME(Z.STATUS, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) STATUS_NAME
        FROM   TB_PAPER_LIST A
             , TB_PAPER_MGT_MST B
             , TB_EVAL_COM_MST C
             , V_MASTER_ALL M
             , TB_BIZ_COM_MST Z
        WHERE  A.PAPER_CODE = B.PAPER_CODE
        AND    A.REF_ID = C.REF_ID(+)
        AND    A.LIST_SEQ = C.PAPER_LIST_SEQ(+)
        AND    A.REF_ID = M.REF_ID
        AND    C.EVAL_ID = Z.REF_ID(+)
        UNION ALL
        SELECT A.REF_ID
             , TO_CHAR(A.PAY_YEARDEG) PAPER_LIST_SEQ
             , C.EVAL_CODE
             , C.INVDEPT_EVAL_REQ_DATE
             , C.INVDEPT_EVAL_USER
             , FN_USER_NAME(C.INVDEPT_EVAL_USER) INVDEPT_EVAL_USER_NAME
             , C.INVDEPT_EVAL_DATE
             , C.INVDEPT_EVAL_END_YN
             , C.PATDEPT_EVAL_USER
             , FN_USER_NAME(C.PATDEPT_EVAL_USER) PATDEPT_EVAL_USER_NAME
             , C.PATDEPT_EVAL_DATE
             , C.PATDEPT_EVAL_END_YN
             , FN_BIZ_CODE_NAME(Z.STATUS, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) STATUS_NAME
        FROM   TB_COST_REMINDER A
             , TB_EVAL_COM_MST C
             , V_MASTER_ALL M
             , TB_BIZ_COM_MST Z
        WHERE  A.REF_ID = C.REF_ID(+)
        AND    A.PAY_YEARDEG = C.PAPER_LIST_SEQ(+)
        AND    A.REF_ID = M.REF_ID
        AND    C.EVAL_ID = Z.REF_ID(+)
       ) A
     , TB_EVAL_CODE B
     , V_MASTER_ALL M
WHERE  A.EVAL_CODE = B.EVAL_CODE
AND    A.REF_ID = M.REF_ID
AND    ((A.INVDEPT_EVAL_USER = {@$USER_ID} AND A.INVDEPT_EVAL_END_YN = '0') OR
        (A.PATDEPT_EVAL_USER = {@$USER_ID} AND A.PATDEPT_EVAL_END_YN = '0')
       )
]]></query>

<!-- To Do 목록 조회 - 신규접수 -->
<query name="/retrieveToDoList_NEW"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.RIGHT_DIV
     , A.KO_APP_TITLE
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
     , A.CRE_DATE
     , FN_USER_NAME(A.CRE_USER) CRE_USER_NAME
     , FN_BIZ_CODE_NAME(Z.STATUS,  {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) STATUS_NAME
     , A.PATTEAM_REQ_DATE PATTEAM_RCPT_DATE
     , NULL EXAM_RESULT_NAME
     , NULL JOB_MAN_NAME
FROM   TB_APP_INT_REQ A
     , TB_BIZ_COM_MST Z
WHERE  A.REF_ID = Z.REF_ID
AND    A.RIGHT_DIV IN ('10', '20', '40')
AND    Z.STATUS IN (SELECT T1.CURR_STATUS FROM TB_BIZ_MGT_PROC T1 WHERE T1.BIZ_ACT = {@BIZ_ACT})
AND    NOT EXISTS (SELECT 1 FROM TB_APP_INT_CONSULT T WHERE T.REF_ID = A.REF_ID)
UNION ALL
SELECT A.REF_ID
     , A.REF_NO
     , A.RIGHT_DIV
     , A.KO_APP_TITLE
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
     , A.CRE_DATE
     , FN_USER_NAME(A.CRE_USER) CRE_USER_NAME
     , FN_BIZ_CODE_NAME(Z.STATUS,  {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) STATUS_NAME
     , A.PATTEAM_REQ_DATE PATTEAM_RCPT_DATE
     , NULL EXAM_RESULT_NAME
     , NULL JOB_MAN_NAME
FROM   TB_APP_INT_REQ A
     , TB_BIZ_COM_MST Z
WHERE  A.REF_ID = Z.REF_ID
AND    A.RIGHT_DIV IN ('30')
AND    Z.STATUS IN (SELECT T1.CURR_STATUS FROM TB_BIZ_MGT_PROC T1 WHERE T1.BIZ_ACT = 'A00009')
AND    NOT EXISTS (SELECT 1 FROM TB_APP_INT_CONSULT T WHERE T.REF_ID = A.REF_ID)
UNION ALL
SELECT A.PRSCH_ID REF_ID
     , A.PRSCH_NO REF_NO
     , A.PRSCH_DIV RIGHT_DIV
     , A.PRSCH_SUBJECT KO_APP_TITLE
     , FN_USER_NAME(A.REQ_USER) INVENTOR_NAMES
     , A.CRE_DATE
     , FN_USER_NAME(A.CRE_USER) CRE_USER_NAME
     , FN_BIZ_CODE_NAME(Z.STATUS,  {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) STATUS_NAME
     , B.RCPT_DATE PATTEAM_RCPT_DATE
     , FN_COM_CODE_NAME('EXAM_RESULT', B.EXAM_RESULT, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXAM_RESULT_NAME
     , FN_USER_NAME(B.JOB_MAN) JOB_MAN_NAME
FROM   TB_APP_PRSCH_REQ A
     , TB_APP_PRSCH_CONSULT B
     , TB_BIZ_COM_MST Z
WHERE  A.PRSCH_ID = B.PRSCH_ID(+)
AND    A.PRSCH_ID = Z.REF_ID
AND    Z.STATUS IN (SELECT T1.CURR_STATUS FROM TB_BIZ_MGT_PROC T1 WHERE T1.BIZ_ACT = {@BIZ_ACT})
]]></query>

<!-- To Do 목록 조회 - 진행서류 -->
<query name="/retrieveToDoList_PAPER"><![CDATA[
SELECT A.REF_ID
     , A.LIST_SEQ
     , C.INOUT_DIV
     , C.REF_NO
     , C.APP_NO
     , B.PAPER_NAME
     , A.COMMENTS
     , C.KO_APP_TITLE
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
     , A.PAPER_DATE
     , A.DUE_DATE
     , C.OFFICE_CODE
     , FN_OFFICE_NAME(C.OFFICE_CODE) AS OFFICE_CODE_NAME
     , C.JOB_MAN
     , FN_USER_NAME(C.JOB_MAN) AS JOB_MAN_NAME
     , FN_PAPER_NAME(C.STATUS) STATUS_NAME
FROM   TB_PAPER_LIST A
     , TB_PAPER_MGT_MST B
     , TB_APP_MST C
WHERE  A.PAPER_CODE = B.PAPER_CODE
AND    A.REF_ID = C.REF_ID
AND    A.CONFIRM_DATE IS NULL
AND    FN_PAPER_CONFIRM_OWNER(A.REF_ID, A.LIST_SEQ) IS NOT NULL
{#paper1}
]]></query>

<query name="/retrieveToDoList_"><![CDATA[
]]></query>

<query name="/retrieveToDoList_PAPER/jobMan" target="paper1"><![CDATA[
AND    A.REF_ID IN (SELECT M.REF_ID
                    FROM   V_MASTER_ALL M
                    WHERE  M.JOB_MAN = {@$USER_ID}
                   )
]]></query>
<query name="/retrieveToDoList_PAPER/inventor" target="paper1"><![CDATA[
AND    B.INVENTOR_DISP_YN = '1'
AND    A.REF_ID IN (SELECT I.REF_ID
                    FROM   TB_MAPP_INVENTOR I
                    WHERE  I.INV_USER = {@$USER_ID}
                   )
]]></query>

</root>
