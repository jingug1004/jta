<?xml version="1.0" encoding="utf-8"?>

<root>
<!-- 부서별 출원현황 -->
<query name="/retrieveStatusByDeptChart"><![CDATA[
SELECT COL2, COL1, CNT, DEPT_CODE
FROM(
      SELECT CASE NVL(T1.DEPT_NAME, '-') WHEN '-' THEN '부서없음' ELSE T1.DEPT_NAME END COL2,
             T1.GUBUN COL1, NVL(T2.CNT,0) CNT, T1.DEPT_CODE DEPT_CODE
      FROM
          (SELECT FN_DEPT_NAME(DEPT_CODE) DEPT_NAME, '출원' GUBUN, DEPT_CODE
                FROM TB_APP_MST
                WHERE DEPT_CODE NOT IN ('O000000020','66500','O000000033','66530','O000000017','O000000029'
                                        ,'P0008','P0014','P0020','P0022','P0024','55310','O000000021','O000000028','35250','O000000014'
                                        ,'35310','49400','O000000006','35620','00000','퇴사','O000000015','O000000040','35630')
                GROUP BY DEPT_CODE) T1
          LEFT OUTER JOIN
          (SELECT FN_DEPT_NAME(DEPT_CODE) DEPT_NAME, '출원' GUBUN, COUNT(*) CNT, DEPT_CODE
                FROM TB_APP_MST
                WHERE APP_NO IS NOT NULL
                  AND REG_NO IS NULL
                  AND RIGHT_DIV IN ('10','20')
                GROUP BY DEPT_CODE) T2
          ON T1.DEPT_CODE=T2.DEPT_CODE OR T1.DEPT_CODE IS NULL AND T2.DEPT_CODE IS NULL
)
ORDER BY COL2
]]></query>
<!-- 부서별 등록현황 -->
<query name="/retrieveStatusByDeptRegChart"><![CDATA[
SELECT COL2, COL1, CNT, DEPT_CODE
FROM(

      SELECT CASE NVL(T1.DEPT_NAME, '-') WHEN '-' THEN '부서없음' ELSE T1.DEPT_NAME END COL2,
             T1.GUBUN COL1, NVL(T2.CNT,0) CNT, T1.DEPT_CODE DEPT_CODE
      FROM
          (SELECT FN_DEPT_NAME(DEPT_CODE) DEPT_NAME, '등록' GUBUN, DEPT_CODE
                FROM TB_APP_MST
                WHERE DEPT_CODE NOT IN ('O000000020','66500','O000000033','66530','O000000017','O000000029'
                                        ,'P0008','P0014','P0020','P0022','P0024','55310','O000000021','O000000028','35250','O000000014'
                                        ,'35310','49400','O000000006','35620','00000','퇴사','O000000015','O000000040','35630')
                GROUP BY DEPT_CODE) T1
          LEFT OUTER JOIN
          (SELECT FN_DEPT_NAME(DEPT_CODE) DEPT_NAME, '등록' GUBUN, COUNT(*) CNT, DEPT_CODE
                FROM TB_APP_MST
                WHERE APP_NO IS NOT NULL
                  AND REG_NO IS NOT NULL
                  AND RIGHT_DIV IN ('10','20')
                GROUP BY DEPT_CODE) T2
          ON T1.DEPT_CODE=T2.DEPT_CODE OR T1.DEPT_CODE IS NULL AND T2.DEPT_CODE IS NULL
)
ORDER BY CNT DESC
]]></query>
<!-- 부서별 출원 리스트 상세 -->
<query name="/retrieveStatusByDeptPopApp"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
    AND DEPT_CODE = {@DEPT_CODE}
    AND APP_NO IS NOT NULL
    AND REG_NO IS NULL
]]></query>

<!-- 부서별 등록 리스트 상세 -->
<query name="/retrieveStatusByDeptPopReg"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
    AND DEPT_CODE = {@DEPT_CODE}
    AND REG_NO IS NOT NULL
]]></query>

<!-- 부서없음 출원 리스트 상세 -->
<query name="/retrieveStatusByNoDeptPopApp"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
    AND DEPT_CODE IS NULL
    AND APP_NO IS NOT NULL
    AND REG_NO IS NULL
]]></query>

<!-- 부서없음 등록 리스트 상세 -->
<query name="/retrieveStatusByNoDeptPopReg"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
    AND DEPT_CODE IS NULL
    AND REG_NO IS NOT NULL
]]></query>

<!-- 전체 출원/등록현황 -->
<query name="/retrieveStatusByAllChart"><![CDATA[
SELECT GUBUN COL1, CNT
FROM(
  SELECT '진행중' GUBUN, COUNT(*) CNT
  FROM TB_APP_MST MST
  WHERE MST.APP_NO IS NULL
    AND MST.REG_NO IS NULL
    AND MST.ABD_YN <> '1'
UNION ALL
  SELECT '출원' GUBUN, COUNT(*) CNT
  FROM(
    SELECT A.* FROM TB_APP_MST A
                   ,TB_MAPP_APP_MAN B
    WHERE A.REF_ID = B.REF_ID
      AND A.APP_NO IS NOT NULL
      AND A.REG_NO IS NULL
      AND A.RIGHT_DIV IN ('10','20')
      AND B.APP_MAN_CODE IN ('P0006','P0016')
      AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
      AND A.INOUT_DIV = 'INT'
    UNION ALL
    SELECT A.* FROM TB_APP_MST A
                  , TB_APP_MST_EXT B
                  , TB_APP_EXT_GRP C
                  , TB_MAPP_APP_MAN D
    WHERE A.REF_ID = B.REF_ID
      AND B.GRP_ID(+) = C.GRP_ID
      AND C.GRP_ID = D.REF_ID
      AND A.APP_NO IS NOT NULL
      AND A.REG_NO IS NULL
      AND A.RIGHT_DIV IN ('10','20')
      AND D.APP_MAN_CODE IN ('P0006','P0016')
      AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
      AND A.INOUT_DIV = 'EXT'
  )
UNION ALL
  SELECT '등록' GUBUN, COUNT(*) CNT
  FROM (
    SELECT A.* FROM TB_APP_MST A
                 ,TB_MAPP_APP_MAN B
    WHERE A.REF_ID = B.REF_ID
      AND A.APP_NO IS NOT NULL
      AND A.REG_NO IS NOT NULL
      AND A.RIGHT_DIV IN ('10','20')
      AND B.APP_MAN_CODE IN ('P0006','P0016')
      AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
      AND A.INOUT_DIV = 'INT'
    UNION ALL
    SELECT A.* FROM TB_APP_MST A
                  , TB_APP_MST_EXT B
                  , TB_APP_EXT_GRP C
                  , TB_MAPP_APP_MAN D
    WHERE A.REF_ID = B.REF_ID
      AND B.GRP_ID(+) = C.GRP_ID
      AND C.GRP_ID = D.REF_ID
      AND A.APP_NO IS NOT NULL
      AND A.REG_NO IS NOT NULL
      AND A.RIGHT_DIV IN ('10','20')
      AND D.APP_MAN_CODE IN ('P0006','P0016')
      AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
      AND A.INOUT_DIV = 'EXT'
  )
UNION ALL
  SELECT '포기' GUBUN, COUNT(*) CNT
  FROM (
    SELECT A.* FROM TB_APP_MST A
                 ,TB_MAPP_APP_MAN B
    WHERE A.REF_ID = B.REF_ID
      AND A.ABD_YN ='1'
      AND A.RIGHT_DIV IN ('10','20')
      AND B.APP_MAN_CODE IN ('P0006','P0016')
      AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
      AND A.INOUT_DIV = 'INT'
    UNION ALL
    SELECT A.* FROM TB_APP_MST A
                  , TB_APP_MST_EXT B
                  , TB_APP_EXT_GRP C
                  , TB_MAPP_APP_MAN D
    WHERE A.REF_ID = B.REF_ID
      AND B.GRP_ID(+) = C.GRP_ID
      AND C.GRP_ID = D.REF_ID
      AND A.ABD_YN ='1'
      AND A.RIGHT_DIV IN ('10','20')
      AND D.APP_MAN_CODE IN ('P0006','P0016')
      AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
      AND A.INOUT_DIV = 'EXT'
  )
)
]]></query>

<!-- 전체 진행중 리스트 상세 -->
<query name="/retrieveStatusByAllPopGoing"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
    AND APP_NO IS NULL
    AND REG_NO IS NULL
    AND ABD_YN <> '1'
]]></query>

<!-- 전체 출원 리스트 상세 -->
<query name="/retrieveStatusByAllPopApp"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM(
SELECT A.* FROM TB_APP_MST A
              , TB_MAPP_APP_MAN B
           WHERE A.REF_ID = B.REF_ID
            AND A.APP_NO IS NOT NULL
            AND A.REG_NO IS NULL
            AND A.INOUT_DIV = 'INT'
            AND A.RIGHT_DIV IN ('10','20')
            AND B.APP_MAN_CODE IN ('P0006','P0016')
            AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
UNION ALL
SELECT A.* FROM TB_APP_MST A
               ,TB_APP_MST_EXT B
               ,TB_APP_EXT_GRP C
               ,TB_MAPP_APP_MAN D
           WHERE A.REF_ID = B.REF_ID
              AND B.GRP_ID(+) = C.GRP_ID
              AND C.GRP_ID = D.REF_ID
              AND A.INOUT_DIV = 'EXT'
              AND A.RIGHT_DIV IN ('10','20')
              AND A.APP_NO IS NOT NULL
              AND A.REG_NO IS NULL
              AND D.APP_MAN_CODE IN ('P0006','P0016')
              AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
)A, TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
]]></query>

<!-- 전체 등록 리스트 상세 -->
<query name="/retrieveStatusByAllPopReg"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM(
SELECT A.* FROM TB_APP_MST A
              , TB_MAPP_APP_MAN B
           WHERE A.REF_ID = B.REF_ID
            AND A.APP_NO IS NOT NULL
            AND A.REG_NO IS NOT NULL
            AND A.INOUT_DIV = 'INT'
            AND A.RIGHT_DIV IN ('10','20')
            AND B.APP_MAN_CODE IN ('P0006','P0016')
            AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
UNION ALL
SELECT A.* FROM TB_APP_MST A
               ,TB_APP_MST_EXT B
               ,TB_APP_EXT_GRP C
               ,TB_MAPP_APP_MAN D
           WHERE A.REF_ID = B.REF_ID
              AND B.GRP_ID(+) = C.GRP_ID
              AND C.GRP_ID = D.REF_ID
              AND A.INOUT_DIV = 'EXT'
              AND A.RIGHT_DIV IN ('10','20')
              AND A.APP_NO IS NOT NULL
              AND A.REG_NO IS NOT NULL
              AND D.APP_MAN_CODE IN ('P0006','P0016')
              AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
)A, TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
]]></query>

<!-- 전체 포기 리스트 상세 -->
<query name="/retrieveStatusByAllPopGiveUp"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM(
SELECT A.* FROM TB_APP_MST A
              , TB_MAPP_APP_MAN B
           WHERE A.REF_ID = B.REF_ID
            AND A.INOUT_DIV = 'INT'
            AND A.RIGHT_DIV IN ('10','20')
            AND B.APP_MAN_CODE IN ('P0006','P0016')
            AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
            AND A.ABD_YN = '1'
UNION ALL
SELECT A.* FROM TB_APP_MST A
               ,TB_APP_MST_EXT B
               ,TB_APP_EXT_GRP C
               ,TB_MAPP_APP_MAN D
           WHERE A.REF_ID = B.REF_ID
              AND B.GRP_ID(+) = C.GRP_ID
              AND C.GRP_ID = D.REF_ID
              AND A.INOUT_DIV = 'EXT'
              AND A.RIGHT_DIV IN ('10','20')
              AND D.APP_MAN_CODE IN ('P0006','P0016')
              AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
              AND A.ABD_YN = '1'
)A, TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
]]></query>

<!-- 개인 출원/등록현황 -->
<query name="/retrieveStatusByPersonChart"><![CDATA[
SELECT GUBUN COL1, COUNT(CNT) CNT
FROM(
  SELECT ING.REF_ID, '진행중' GUBUN, COUNT(*) CNT
  FROM(
    SELECT A.REF_ID FROM TB_APP_MST A
    WHERE A.APP_NO IS NULL
      AND A.REG_NO IS NULL
      AND A.ABD_YN <> '1'
      AND A.INOUT_DIV = 'INT'
    UNION ALL
    SELECT A.REF_ID FROM TB_APP_MST A
                  , TB_APP_MST_EXT B
                  , TB_APP_EXT_GRP C
    WHERE A.REF_ID = B.REF_ID
      AND B.GRP_ID(+) = C.GRP_ID
      AND A.APP_NO IS NULL
      AND A.REG_NO IS NULL
      AND A.ABD_YN <> '1'
      AND A.INOUT_DIV = 'EXT'
  )ING
  GROUP BY ING.REF_ID
UNION ALL
  SELECT APP.REF_ID, '출원' GUBUN, COUNT(*) CNT
  FROM(
    SELECT A.REF_ID FROM TB_APP_MST A
    WHERE A.APP_NO IS NOT NULL
      AND A.REG_NO IS NULL
      AND A.INOUT_DIV = 'INT'
    UNION ALL
    SELECT A.REF_ID FROM TB_APP_MST A
                  , TB_APP_MST_EXT B
                  , TB_APP_EXT_GRP C
    WHERE A.REF_ID = B.REF_ID
      AND B.GRP_ID(+) = C.GRP_ID
      AND A.APP_NO IS NOT NULL
      AND A.REG_NO IS NULL
      AND A.INOUT_DIV = 'EXT'
  )APP
  GROUP BY APP.REF_ID
UNION ALL
  SELECT REG.REF_ID,  '등록' GUBUN, COUNT(*) CNT
  FROM (
    SELECT A.REF_ID FROM TB_APP_MST A
    WHERE A.APP_NO IS NOT NULL
      AND A.REG_NO IS NOT NULL
      AND A.INOUT_DIV = 'INT'
    UNION ALL
    SELECT A.REF_ID FROM TB_APP_MST A
                       , TB_APP_MST_EXT B
                       , TB_APP_EXT_GRP C
   WHERE A.REF_ID = B.REF_ID
      AND B.GRP_ID(+) = C.GRP_ID
      AND A.APP_NO IS NOT NULL
      AND A.REG_NO IS NOT NULL
      AND A.INOUT_DIV = 'EXT'
  )REG
  GROUP BY REG.REF_ID
UNION ALL
  SELECT GIV.REF_ID, '포기' GUBUN, COUNT(*) CNT
  FROM (
    SELECT A.REF_ID FROM TB_APP_MST A
    WHERE A.ABD_YN ='1'
      AND A.INOUT_DIV = 'INT'
    UNION ALL
    SELECT A.REF_ID FROM TB_APP_MST A
                       , TB_APP_MST_EXT B
                       , TB_APP_EXT_GRP C
    WHERE A.REF_ID = B.REF_ID
      AND B.GRP_ID(+) = C.GRP_ID
      AND A.ABD_YN ='1'
      AND A.INOUT_DIV = 'EXT'
  )GIV
  GROUP BY GIV.REF_ID
)STATUS , TB_MAPP_INVENTOR INV
WHERE STATUS.REF_ID = INV.REF_ID
AND INV.INV_USER = {@$USER_ID}
GROUP BY GUBUN
ORDER BY GUBUN
]]></query>

<!-- 개인별 진행중 리스트 상세 -->
<query name="/retrieveStatusByPersonPopGoing"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
     , TB_MAPP_INVENTOR INV
WHERE A.REF_ID = B.REF_ID(+)
AND A.REF_ID = INV.REF_ID
AND INV.INV_USER =  {@$USER_ID}
AND A.APP_NO IS NULL
AND A.REG_NO IS NULL
AND A.ABD_YN <> '1'
]]></query>

<!-- 개인별 등록 리스트 상세 -->
<query name="/retrieveStatusByPersonPopReg"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
     , TB_MAPP_INVENTOR INV
WHERE A.REF_ID = B.REF_ID(+)
AND A.REF_ID = INV.REF_ID
AND INV.INV_USER =  {@$USER_ID}
AND A.REG_NO IS NOT NULL
AND A.APP_NO IS NOT NULL
]]></query>

<!-- 개인별 포기 리스트 상세-->
<query name="/retrieveStatusByPersonPopGiveUp"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
     , TB_MAPP_INVENTOR INV
WHERE A.REF_ID = B.REF_ID(+)
AND A.REF_ID = INV.REF_ID
AND INV.INV_USER =  {@$USER_ID}
AND A.ABD_YN = '1'
]]></query>

<!-- 연구소별 출원/등록현황 -->
<query name="/retrieveStatusByLabChart"><![CDATA[
SELECT COL2, COL1, CNT, LAB_CODE
FROM(
      SELECT CASE NVL(T1.LAB_NAME, '-') WHEN '-' THEN '연구소없음' ELSE T1.LAB_NAME END COL2,
             T1.GUBUN COL1, NVL(T2.CNT,0) CNT, T1.LAB_CODE LAB_CODE
      FROM
          (SELECT FN_LAB_NAME(LAB_CODE) LAB_NAME, '출원' GUBUN, LAB_CODE
                FROM TB_APP_MST
                GROUP BY LAB_CODE) T1
          LEFT OUTER JOIN
          (SELECT FN_LAB_NAME(LAB_CODE) LAB_NAME, '출원' GUBUN, COUNT(*) CNT, LAB_CODE
                FROM TB_APP_MST
                WHERE APP_NO IS NOT NULL
                  AND REG_NO IS NULL
                GROUP BY LAB_CODE) T2
          ON T1.LAB_CODE=T2.LAB_CODE OR T1.LAB_CODE IS NULL AND T2.LAB_CODE IS NULL
      UNION ALL
      SELECT CASE NVL(T1.LAB_NAME, '-') WHEN '-' THEN '연구소없음' ELSE T1.LAB_NAME END COL2,
             T1.GUBUN COL1, NVL(T2.CNT,0) CNT, T1.LAB_CODE LAB_CODE
      FROM
          (SELECT FN_LAB_NAME(LAB_CODE) LAB_NAME, '등록' GUBUN, LAB_CODE
                FROM TB_APP_MST
                GROUP BY LAB_CODE) T1
          LEFT OUTER JOIN
          (SELECT FN_LAB_NAME(LAB_CODE) LAB_NAME, '등록' GUBUN, COUNT(*) CNT, LAB_CODE
                FROM TB_APP_MST
                WHERE APP_NO IS NOT NULL
                  AND REG_NO IS NOT NULL
                GROUP BY LAB_CODE) T2
          ON T1.LAB_CODE=T2.LAB_CODE OR T1.LAB_CODE IS NULL AND T2.LAB_CODE IS NULL
)
ORDER BY COL2
]]></query>

<!-- 연구소별 출원 리스트 상세 -->
<query name="/retrieveStatusByLabPopApp"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
    AND LAB_CODE = {@LAB_CODE}
    AND APP_NO IS NOT NULL
    AND REG_NO IS NULL
]]></query>

<!-- 연구소별 등록 리스트 상세 -->
<query name="/retrieveStatusByLabPopReg"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
    AND LAB_CODE = {@LAB_CODE}
    AND REG_NO IS NOT NULL
]]></query>

<!-- 연구소 없음 출원 리스트 상세 -->
<query name="/retrieveStatusByNoLabPopApp"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
    AND LAB_CODE IS NULL
    AND APP_NO IS NOT NULL
    AND REG_NO IS NULL
]]></query>

<!-- 연구소 없음 등록 리스트 상세 -->
<query name="/retrieveStatusByNoLabPopReg"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
WHERE A.REF_ID = B.REF_ID(+)
    AND LAB_CODE IS NULL
    AND REG_NO IS NOT NULL
]]></query>


<!-- 년도별 출원/등록현황 -->
<query name="/retrieveStatusByYearChart"><![CDATA[
SELECT YEAR COL2,
       GUBUN COL1, CNT
FROM
(
    SELECT SUBSTR(APP_DATE, 1, 4) AS YEAR, '출원' GUBUN, COUNT(*) CNT
    FROM (
    SELECT A.* FROM TB_APP_MST A
                   ,TB_MAPP_APP_MAN B
               WHERE A.REF_ID = B.REF_ID
                    AND A.APP_NO IS NOT NULL
                    AND A.RIGHT_DIV IN ('10','20')
                    AND B.APP_MAN_CODE IN ('P0006','P0016')
                    AND A.INOUT_DIV = 'INT'
                    AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
                    AND A.REG_NO IS NULL
    UNION ALL
    SELECT A.* FROM TB_APP_MST A
                  , TB_APP_MST_EXT B
                  , TB_APP_EXT_GRP C
                  , TB_MAPP_APP_MAN D
               WHERE A.REF_ID = B.REF_ID
                    AND B.GRP_ID(+) = C.GRP_ID
                    AND C.GRP_ID = D.REF_ID
                    AND A.APP_NO IS NOT NULL
                    AND A.RIGHT_DIV IN ('10','20')
                    AND D.APP_MAN_CODE IN ('P0006','P0016')
                    AND A.INOUT_DIV = 'EXT'
                    AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
                    AND A.REG_NO IS NULL
    )GROUP BY SUBSTR(APP_DATE, 1, 4)
    UNION ALL
    SELECT SUBSTR(REG_DATE, 1, 4) AS YEAR, '등록' GUBUN, COUNT(*) CNT
    FROM (
    SELECT A.* FROM TB_APP_MST A
                   ,TB_MAPP_APP_MAN B
               WHERE A.REF_ID = B.REF_ID
                AND A.APP_NO IS NOT NULL
                AND A.RIGHT_DIV IN ('10','20')
                AND B.APP_MAN_CODE IN ('P0006','P0016')
                AND A.INOUT_DIV = 'INT'
                AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
                AND A.REG_NO IS NOT NULL
    UNION ALL
    SELECT A.* FROM TB_APP_MST A
                  , TB_APP_MST_EXT B
                  , TB_APP_EXT_GRP C
                  , TB_MAPP_APP_MAN D
              WHERE A.REF_ID = B.REF_ID
                AND B.GRP_ID(+) = C.GRP_ID
                AND C.GRP_ID = D.REF_ID
                AND A.APP_NO IS NOT NULL
                AND A.RIGHT_DIV IN ('10','20')
                AND D.APP_MAN_CODE IN ('P0006','P0016')
                AND A.INOUT_DIV = 'EXT'
                AND A.REG_NO IS NOT NULL
    )GROUP BY SUBSTR(REG_DATE, 1, 4)
)
ORDER BY YEAR


]]></query>

<!-- 년도별 출원/등록현황 상세(출원) -->
<query name="/retrieveStatusByYearChartDetailApp"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, 'ko-kr', 'ko-kr') EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, 'ko-kr', 'ko-kr') KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
   , TB_APP_MST_INT B
   , TB_MAPP_APP_MAN C
WHERE A.REF_ID = B.REF_ID(+)
    AND A.REF_ID = C.REF_ID
    AND A.RIGHT_DIV IN ('10','20')
    AND C.APP_MAN_CODE IN ('P0006','P0016')
    AND A.INOUT_DIV = 'INT'
    AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
    AND A.APP_NO IS NOT NULL
    AND A.REG_NO IS NULL
    AND SUBSTR(A.APP_DATE, 1, 4) = {@APP_DATE}
UNION ALL
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', E.EXT_APP_NEED_YN, 'ko-kr', 'ko-kr') EXT_APP_NEED_YN_NAME
     , E.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', E.KEY_PAT_YN, 'ko-kr', 'ko-kr') KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
   , TB_APP_MST_EXT B
   , TB_APP_EXT_GRP C
   , TB_MAPP_APP_MAN D
   , TB_APP_MST_INT E
WHERE A.REF_ID = B.REF_ID
    AND B.GRP_ID(+) = C.GRP_ID
    AND C.GRP_ID = D.REF_ID
    AND A.REF_ID = E.REF_ID(+)
    AND A.APP_NO IS NOT NULL
    AND A.REG_NO IS NULL
    AND A.RIGHT_DIV IN ('10','20')
    AND D.APP_MAN_CODE IN ('P0006','P0016')
    AND A.INOUT_DIV = 'EXT'
    AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
    AND SUBSTR(A.APP_DATE, 1, 4) = {@APP_DATE}

]]></query>
<!-- 년도별 출원/등록현황 상세(등록) -->
<query name="/retrieveStatusByYearChartDetailReg"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, 'ko-kr', 'ko-kr') EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, 'ko-kr', 'ko-kr') KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
   , TB_APP_MST_INT B
   , TB_MAPP_APP_MAN C
WHERE A.REF_ID = B.REF_ID(+)
    AND A.REF_ID = C.REF_ID
    AND A.RIGHT_DIV IN ('10','20')
    AND C.APP_MAN_CODE IN ('P0006','P0016')
    AND A.INOUT_DIV = 'INT'
    AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
    AND A.APP_NO IS NOT NULL
    AND A.REG_NO IS NOT NULL
    AND SUBSTR(A.REG_DATE, 1, 4) = {@APP_DATE}
UNION ALL
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', E.EXT_APP_NEED_YN, 'ko-kr', 'ko-kr') EXT_APP_NEED_YN_NAME
     , E.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', E.KEY_PAT_YN, 'ko-kr', 'ko-kr') KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
   , TB_APP_MST_EXT B
   , TB_APP_EXT_GRP C
   , TB_MAPP_APP_MAN D
   , TB_APP_MST_INT E
WHERE A.REF_ID = B.REF_ID
    AND B.GRP_ID(+) = C.GRP_ID
    AND C.GRP_ID = D.REF_ID
    AND A.REF_ID = E.REF_ID(+)
    AND A.APP_NO IS NOT NULL
    AND A.REG_NO IS NOT NULL
    AND A.RIGHT_DIV IN ('10','20')
    AND D.APP_MAN_CODE IN ('P0006','P0016')
    AND A.INOUT_DIV = 'EXT'
    AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
    AND SUBSTR(A.REG_DATE, 1, 4) = {@APP_DATE}

]]></query>

<!-- 국가별 출원/등록현황 -->
<query name="/retrieveStatusByNationChart"><![CDATA[
SELECT COUNTRY_NAME COL2,
       GUBUN COL1, CNT, COUNTRY_CODE
FROM
(
    SELECT FN_COUNTRY_NAME(COUNTRY_CODE) COUNTRY_NAME, '출원' GUBUN, COUNT(*) CNT, COUNTRY_CODE
    FROM TB_APP_MST A
       , TB_APP_MST_EXT B
       , TB_APP_EXT_GRP C
       , TB_MAPP_APP_MAN D
    WHERE A.REF_ID = B.REF_ID
      AND B.GRP_ID(+) = C.GRP_ID
      AND C.GRP_ID = D.REF_ID
      AND A.RIGHT_DIV IN ('10','20')
      AND D.APP_MAN_CODE IN ('P0006','P0016')
      AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
      AND A.APP_NO IS NOT NULL
      AND A.REG_NO IS NULL
      AND A.COUNTRY_CODE <> 'KR'
      AND A.REG_NO IS NULL
    GROUP BY COUNTRY_CODE
    UNION ALL
    SELECT FN_COUNTRY_NAME(COUNTRY_CODE) COUNTRY_NAME, '등록' GUBUN, COUNT(*) CNT, COUNTRY_CODE
    FROM TB_APP_MST A
       , TB_APP_MST_EXT B
       , TB_APP_EXT_GRP C
       , TB_MAPP_APP_MAN D
    WHERE A.REF_ID = B.REF_ID
      AND B.GRP_ID(+) = C.GRP_ID
      AND C.GRP_ID = D.REF_ID
      AND A.RIGHT_DIV IN ('10','20')
      AND D.APP_MAN_CODE IN ('P0006','P0016')
      AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
      AND A.APP_NO IS NOT NULL
      AND A.REG_NO IS NOT NULL
      AND A.COUNTRY_CODE <> 'KR'
   GROUP BY COUNTRY_CODE
)
ORDER BY COUNTRY_NAME
]]></query>

<!-- 메인 국가별 ( 더보기) 출원/등록현황 -->
<query name="/retrieveMainNationChartList"><![CDATA[
SELECT TOTAL.CODE, TOTAL.TO_APP, TOTAL.TO_REG, Y.Y_APP, Y.Y_REG
FROM
(
SELECT APP1.CODE,NVL(APP1.APP,'0')TO_APP,NVL(REG1.REG,'0')TO_REG
FROM
(SELECT DECODE(COUNTRY_CODE,'KR','한국','US','미국','CN','중국','TW','대만','JP','일본','PC','PCT','EP','유럽','DE','독일','ETC','기타','기타')CODE,COUNT(*)APP
FROM TB_APP_MST A , TB_MAPP_APP_MAN B
WHERE A.REF_ID = B.REF_ID
AND A.REG_NO IS NULL
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND B.APP_MAN_CODE IN ('P0006','P0016')
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
AND A.INOUT_DIV = 'INT'
GROUP BY COUNTRY_CODE
UNION ALL
SELECT DECODE(COUNTRY_CODE,'KR','한국','US','미국','CN','중국','TW','대만','JP','일본','PC','PCT','EP','유럽','DE','독일','ETC','기타','기타')CODE,COUNT(*)APP
from TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
where A.REF_ID = B.REF_ID
ANd B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.REG_NO IS NULL
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
AND A.INOUT_DIV = 'EXT'
GROUP BY COUNTRY_CODE
)APP1,
(SELECT DECODE(COUNTRY_CODE,'KR','한국','US','미국','CN','중국','TW','대만','JP','일본','PC','PCT','EP','유럽','DE','독일','ETC','기타','기타')CODE,COUNT(*)REG
FROM TB_APP_MST A , TB_MAPP_APP_MAN B
WHERE A.REF_ID = B.REF_ID
AND A.REG_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND B.APP_MAN_CODE IN ('P0006','P0016')
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
AND A.INOUT_DIV = 'INT'
AND COUNTRY_CODE ='KR'
GROUP BY COUNTRY_CODE
UNION ALL
SELECT DECODE(COUNTRY_CODE,'KR','한국','US','미국','CN','중국','TW','대만','JP','일본','PC','PCT','EP','유럽','DE','독일','ETC','기타','기타')CODE,COUNT(*)REG
from TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
where A.REF_ID = B.REF_ID
ANd B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.REG_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
GROUP BY COUNTRY_CODE
)REG1
WHERE APP1.CODE = REG1.CODE(+)
)TOTAL,
(
SELECT APP1.CODE,NVL(APP1.APP,'0')Y_APP,NVL(REG1.REG,'0')Y_REG
FROM
(SELECT DECODE(COUNTRY_CODE,'KR','한국','US','미국','CN','중국','TW','대만','JP','일본','PC','PCT','EP','유럽','DE','독일','ETC','기타','기타')CODE,COUNT(*)APP
FROM TB_APP_MST A , TB_MAPP_APP_MAN B
WHERE A.REF_ID = B.REF_ID
AND A.REG_NO IS NULL
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND B.APP_MAN_CODE IN ('P0006','P0016')
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
AND A.INOUT_DIV = 'INT'
AND COUNTRY_CODE ='KR'
AND SUBSTR(A.APP_DATE,1,4) = TO_CHAR(SYSDATE,'YYYY')
GROUP BY COUNTRY_CODE
UNION ALL
SELECT DECODE(COUNTRY_CODE,'KR','한국','US','미국','CN','중국','TW','대만','JP','일본','PC','PCT','EP','유럽','DE','독일','ETC','기타','기타')CODE,COUNT(*)APP
from TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
where A.REF_ID = B.REF_ID
ANd B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.REG_NO IS NULL
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND SUBSTR(A.APP_DATE,1,4) = TO_CHAR(SYSDATE,'YYYY')
GROUP BY COUNTRY_CODE
)APP1,
(SELECT DECODE(COUNTRY_CODE,'KR','한국','US','미국','CN','중국','TW','대만','JP','일본','PC','PCT','EP','유럽','DE','독일','ETC','기타','기타')CODE,COUNT(*)REG
FROM TB_APP_MST A , TB_MAPP_APP_MAN B
WHERE A.REF_ID = B.REF_ID
AND A.REG_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND B.APP_MAN_CODE IN ('P0006','P0016')
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
AND A.INOUT_DIV = 'INT'
AND COUNTRY_CODE ='KR'
AND SUBSTR(A.REG_DATE,1,4) = TO_CHAR(SYSDATE,'YYYY')
GROUP BY COUNTRY_CODE
UNION ALL
SELECT DECODE(COUNTRY_CODE,'KR','한국','US','미국','CN','중국','TW','대만','JP','일본','PC','PCT','EP','유럽','DE','독일','ETC','기타','기타')CODE,COUNT(*)REG
from TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
where A.REF_ID = B.REF_ID
ANd B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.REG_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND SUBSTR(A.REG_DATE,1,4) = TO_CHAR(SYSDATE,'YYYY')
GROUP BY COUNTRY_CODE
)REG1
WHERE APP1.CODE = REG1.CODE(+)
)Y
WHERE TOTAL.CODE = Y.CODE(+)
ORDER BY TO_APP DESC
]]></query>

<!-- 국가별 (차트)특허보유현황 -->
<query name="/retrieveStatusByNationChartAll"><![CDATA[
SELECT COUNTRY_NAME COL1,
       CNT
FROM
(
SELECT 'KOREA'COUNTRY_NAME,COUNT(REF_ID)CNT,'KR' COUNTRY_CODE
FROM
(
select A.* from TB_APP_MST A
             ,TB_MAPP_APP_MAN B
where A.REF_ID = B.REF_ID
AND APP_NO is not null
AND A.RIGHT_DIV IN ('10','20')
AND B.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'INT'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
AND A.COUNTRY_CODE ='KR'
union all
select A.* from TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
where A.REF_ID = B.REF_ID
ANd B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND APP_NO is not null
AND A.RIGHT_DIV IN ('10','20')
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='KR'
)
GROUP BY COUNTRY_CODE
UNION ALL
SELECT 'U.S.A'COUNTRY_NAME,COUNT(REF_ID)CNT,'US' COUNTRY_CODE
FROM
(
select A.* from TB_APP_MST A
             ,TB_MAPP_APP_MAN B
where A.REF_ID = B.REF_ID
AND APP_NO is not null
AND A.RIGHT_DIV IN ('10','20')
AND B.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'INT'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
AND A.COUNTRY_CODE ='US'
union all
select A.* from TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
where A.REF_ID = B.REF_ID
ANd B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND APP_NO is not null
AND A.RIGHT_DIV IN ('10','20')
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='US'
)
GROUP BY COUNTRY_CODE
UNION ALL
SELECT 'TAIWAN'COUNTRY_NAME,COUNT(REF_ID)CNT,'TW' COUNTRY_CODE
FROM
(
select A.* from TB_APP_MST A
             ,TB_MAPP_APP_MAN B
where A.REF_ID = B.REF_ID
AND APP_NO is not null
AND A.RIGHT_DIV IN ('10','20')
AND B.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'INT'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
AND A.COUNTRY_CODE ='TW'
union all
select A.* from TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
where A.REF_ID = B.REF_ID
ANd B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND APP_NO is not null
AND A.RIGHT_DIV IN ('10','20')
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='TW'
)
GROUP BY COUNTRY_CODE
UNION ALL
SELECT 'CHINA'COUNTRY_NAME,COUNT(REF_ID)CNT,'CN' COUNTRY_CODE
FROM
(
select A.* from TB_APP_MST A
             ,TB_MAPP_APP_MAN B
where A.REF_ID = B.REF_ID
AND APP_NO is not null
AND A.RIGHT_DIV IN ('10','20')
AND B.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'INT'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
AND A.COUNTRY_CODE ='CN'
union all
select A.* from TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
where A.REF_ID = B.REF_ID
ANd B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND APP_NO is not null
AND A.RIGHT_DIV IN ('10','20')
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='CN'
)
GROUP BY COUNTRY_CODE
UNION ALL
SELECT 'ETC'COUNTRY_NAME,SUM(COUNT(REF_ID))CNT,'ETC' COUNTRY_CODE
FROM
(
select A.* from TB_APP_MST A
             ,TB_MAPP_APP_MAN B
where A.REF_ID = B.REF_ID
AND APP_NO is not null
AND A.RIGHT_DIV IN ('10','20')
AND B.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'INT'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
AND A.COUNTRY_CODE NOT IN ('KR','US','TW','CN')
union all
select A.* from TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
where A.REF_ID = B.REF_ID
ANd B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND APP_NO is not null
AND A.RIGHT_DIV IN ('10','20')
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE NOT IN ('KR','US','TW','CN')
)
GROUP BY COUNTRY_CODE
)
ORDER BY CNT DESC
]]></query>


<!-- 기술별 특허보유현황 -->
<query name="/retrieveStatusByTechChartAll"><![CDATA[
SELECT DECODE(Z.TECH_CODE, 1, '반도체장비', 3, '디스플레이장비', 2, 'Solar 장비', 8, '조명장비', 6, '기타장비') COL1,
       (KR + US + CN + TW + JP + PCT + EP + DE) CNT
FROM (
SELECT KR.TECH_CODE
,NVL(KR.CNT,'0') KR
,NVL(US.CNT,'0') US
,NVL(CN.CNT,'0') CN
,NVL(TW.CNT,'0') TW
,NVL(JP.CNT,'0') JP
,NVL(PC.CNT,'0') PCT
,NVL(EP.CNT,'0') EP
,NVL(DE.CNT,'0') DE
FROM
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             ,TB_MAPP_APP_MAN B
WHERE A.REF_ID = B.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND B.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'INT'
AND A.COUNTRY_CODE ='KR'
AND A.ABD_YN != '1'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)KR,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='US'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)US
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='CN'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)CN
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='TW'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)TW
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='JP'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)JP
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='PC'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)PC
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='EP'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)EP
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='DE'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)DE
WHERE KR.TECH_CODE = US.TECH_CODE(+)
AND US.TECH_CODE = CN.TECH_CODE(+)
AND CN.TECH_CODE = TW.TECH_CODE(+)
AND TW.TECH_CODE = JP.TECH_CODE(+)
AND JP.TECH_CODE = PC.TECH_CODE(+)
AND PC.TECH_CODE = EP.TECH_CODE(+)
AND EP.TECH_CODE = DE.TECH_CODE(+)
AND KR.TECH_CODE NOT IN ('4', '7','9')
 ORDER BY TECH_CODE ASC
 ) Z
 ORDER BY CNT DESC
]]></query>

<!-- 국가별 출원/등록현황 상세 리스트 (출원) -->
<query name="/retrieveStatusByNationChartDetailApp"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', E.EXT_APP_NEED_YN, 'ko-kr', 'ko-kr') EXT_APP_NEED_YN_NAME
     , E.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', E.KEY_PAT_YN, 'ko-kr', 'ko-kr') KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
   , TB_APP_MST_INT E
   , TB_APP_MST_EXT B
   , TB_APP_EXT_GRP C
   , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
    AND A.REF_ID = E.REF_ID(+)
    AND B.GRP_ID(+) = C.GRP_ID
    AND C.GRP_ID = D.REF_ID
    AND A.APP_NO IS NOT NULL
    AND A.REG_NO IS NULL
    AND A.COUNTRY_CODE = {@COUNTRY_CODE}
    AND A.RIGHT_DIV IN ('10','20')
    AND D.APP_MAN_CODE IN ('P0006','P0016')
    AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
]]></query>

<!-- 국가별 출원/등록현황 상세 리스트 (등록) -->
<query name="/retrieveStatusByNationChartDetailReg"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', E.EXT_APP_NEED_YN, 'ko-kr', 'ko-kr') EXT_APP_NEED_YN_NAME
     , E.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', E.KEY_PAT_YN, 'ko-kr', 'ko-kr') KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
   , TB_APP_MST_INT E
   , TB_APP_MST_EXT B
   , TB_APP_EXT_GRP C
   , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
    AND A.REF_ID = E.REF_ID(+)
    AND B.GRP_ID(+) = C.GRP_ID
    AND C.GRP_ID = D.REF_ID
    AND A.APP_NO IS NOT NULL
    AND A.REG_NO IS NOT NULL
    AND A.COUNTRY_CODE = {@COUNTRY_CODE}
    AND A.RIGHT_DIV IN ('10','20')
    AND D.APP_MAN_CODE IN ('P0006','P0016')
    AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083')
]]></query>

<!-- 출원목표대비 실적현황 -->
<query name="/retrieveStatusByGoalChart"><![CDATA[
SELECT FN_DEPT_NAME(DEPT_CODE) COL2, TITLE COL1, CNT
FROM
(
       SELECT DEPT_CODE, '국내출원목표' TITLE, INT_PLAN_CNT CNT
       FROM TB_APP_PLAN_MGT
       WHERE PLAN_YEAR BETWEEN {@PLAN_YEAR} AND {@PLAN_YEAR}
       UNION ALL
       SELECT DEPT_CODE, '해외출원목표' TITLE, EXT_PLAN_CNT CNT
       FROM TB_APP_PLAN_MGT
       WHERE PLAN_YEAR BETWEEN {@PLAN_YEAR} AND {@PLAN_YEAR}
       UNION ALL
       SELECT T3.DEPT_CODE DEPT_CODE, '국내제안' TITLE, SUM(FN_INV_APPLY_ACTUAL(T2.REF_ID, T2.INV_USER)) CNT
         FROM TB_APP_MST_INT T1, TB_MAPP_INVENTOR T2, TB_USR_PATENT T3
        WHERE T1.PATTEAM_RCPT_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T1.REF_ID = T2.REF_ID
          AND T2.INV_USER = T3.USER_ID
          AND T3.DEPT_CODE = NVL(NULL, T3.DEPT_CODE)
          AND T1.ACTR_SUM_TARGET_YN = '1'
       GROUP BY T3.DEPT_CODE
       UNION ALL
       SELECT T3.DEPT_CODE DEPT_CODE, '국내실적' TITLE,
              SUM(FN_INV_APPLY_ACTUAL(T2.REF_ID, T2.INV_USER)) CNT
         FROM TB_APP_MST_INT     T1,
              TB_MAPP_INVENTOR   T2,
              TB_USR_PATENT      T3,
              TB_APP_INT_CONSULT T4
        WHERE T1.PATTEAM_RCPT_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T1.REF_ID = T2.REF_ID
          AND T2.INV_USER = T3.USER_ID
          AND T4.REF_ID = T1.REF_ID
          AND T4.EXAM_RESULT = '1'
          AND T3.DEPT_CODE = NVL(NULL, T3.DEPT_CODE)
          AND T1.ACTR_SUM_TARGET_YN = '1'
       GROUP BY T3.DEPT_CODE
       UNION ALL
       SELECT T3.DEPT_CODE DEPT_CODE, '국내반려' TITLE,
              SUM(FN_INV_APPLY_ACTUAL(T2.REF_ID, T2.INV_USER)) CNT
         FROM TB_APP_MST_INT     T1,
              TB_MAPP_INVENTOR   T2,
              TB_USR_PATENT      T3,
              TB_APP_INT_CONSULT T4
        WHERE T1.PATTEAM_RCPT_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T1.REF_ID = T2.REF_ID
          AND T2.INV_USER = T3.USER_ID
          AND T4.REF_ID = T1.REF_ID
          AND T4.EXAM_RESULT = '2'
          AND T3.DEPT_CODE = NVL(NULL, T3.DEPT_CODE)
          AND T1.ACTR_SUM_TARGET_YN = '1'
        GROUP BY T3.DEPT_CODE
       UNION ALL
       SELECT T3.DEPT_CODE DEPT_CODE, '국내출원의뢰' TITLE,
              SUM(FN_INV_APPLY_ACTUAL(T2.REF_ID, T2.INV_USER)) CNT
         FROM TB_APP_MST       T1,
              TB_MAPP_INVENTOR T2,
              TB_USR_PATENT    T3,
              TB_APP_MST_INT   T4
        WHERE T1.INOUT_DIV = 'INT'
          AND T1.APP_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T1.OFFICE_SEND_DATE IS NOT NULL
          AND T1.REF_ID = T2.REF_ID
          AND T2.INV_USER = T3.USER_ID
          AND T4.REF_ID = T1.REF_ID
          AND T3.DEPT_CODE = NVL(NULL, T3.DEPT_CODE)
          AND T4.ACTR_SUM_TARGET_YN = '1'
        GROUP BY T3.DEPT_CODE
       UNION ALL
       SELECT T3.DEPT_CODE DEPT_CODE, '국내등록' TITLE,
              SUM(FN_INV_APPLY_ACTUAL(T2.REF_ID, T2.INV_USER)) CNT
         FROM TB_APP_MST       T1,
              TB_MAPP_INVENTOR T2,
              TB_USR_PATENT    T3,
              TB_APP_MST_INT   T4
        WHERE T1.INOUT_DIV = 'INT'
          AND T1.REG_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T1.REG_NO IS NOT NULL
          AND T1.ABD_YN = '0'
          AND T1.REF_ID = T2.REF_ID
          AND T2.INV_USER = T3.USER_ID
          AND T4.REF_ID = T1.REF_ID
          AND T3.DEPT_CODE = NVL(NULL, T3.DEPT_CODE)
          AND T4.ACTR_SUM_TARGET_YN = '1'
        GROUP BY T3.DEPT_CODE
       UNION ALL
       SELECT T4.DEPT_CODE DEPT_CODE, '해외실적' TITLE,
              SUM(FN_INV_APPLY_ACTUAL(T3.REF_ID, T3.INV_USER)) CNT
         FROM TB_APP_MST       T1,
              TB_APP_MST_EXT   T2,
              TB_MAPP_INVENTOR T3,
              TB_USR_PATENT    T4
        WHERE T1.INOUT_DIV = 'EXT'
          AND T1.REF_ID = T2.REF_ID
          AND T1.CRE_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T2.GRP_ID = T3.REF_ID
          AND T3.INV_USER = T4.USER_ID
          AND T4.DEPT_CODE = NVL(NULL, T4.DEPT_CODE)
        GROUP BY T4.DEPT_CODE
       UNION ALL
       SELECT T3.DEPT_CODE DEPT_CODE, '해외 출원의뢰' TITLE,
              SUM(FN_INV_APPLY_ACTUAL(T2.REF_ID, T2.INV_USER)) CNT
         FROM TB_APP_MST T1, TB_MAPP_INVENTOR T2, TB_USR_PATENT T3
        WHERE T1.INOUT_DIV = 'EXT'
          AND T1.APP_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T1.OFFICE_SEND_DATE IS NOT NULL
          AND T1.REF_ID = T2.REF_ID
          AND T2.INV_USER = T3.USER_ID
          AND T3.DEPT_CODE = NVL(NULL, T3.DEPT_CODE)
        GROUP BY T3.DEPT_CODE
       UNION ALL
       SELECT T3.DEPT_CODE DEPT_CODE,'해외 등록' TITLE,
              SUM(FN_INV_APPLY_ACTUAL(T2.REF_ID, T2.INV_USER)) CNT
         FROM TB_APP_MST T1, TB_MAPP_INVENTOR T2, TB_USR_PATENT T3
        WHERE T1.INOUT_DIV = 'EXT'
          AND T1.REG_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T1.REG_NO IS NOT NULL
          AND T1.ABD_YN = '0'
          AND T1.REF_ID = T2.REF_ID
          AND T2.INV_USER = T3.USER_ID
          AND T3.DEPT_CODE = NVL(NULL, T3.DEPT_CODE)
        GROUP BY T3.DEPT_CODE
)
ORDER BY COL2
]]></query>

<query name="/retrieveStatusPop"><![CDATA[
SELECT REF_ID, APP_NO, APP_DATE, REG_NO, REG_DATE
FROM TB_APP_MST
WHERE DEPT_CODE = {@DEPT_CODE}
]]></query>

<!-- 출원목표대비 실적현황 리스트-->
<query name="/retrieveStatusByGoalChartForGrid"><![CDATA[
SELECT FN_DEPT_NAME(A.DEPT_CODE) TEAM,
       (SELECT SUM(INT_PLAN_CNT)
       FROM TB_APP_PLAN_MGT
       WHERE PLAN_YEAR BETWEEN {@PLAN_YEAR} AND {@PLAN_YEAR}
       AND DEPT_CODE = A.DEPT_CODE
       GROUP BY DEPT_CODE) C1,
           (SELECT SUM(EXT_PLAN_CNT)
       FROM TB_APP_PLAN_MGT
       WHERE PLAN_YEAR BETWEEN {@PLAN_YEAR} AND {@PLAN_YEAR}
       AND DEPT_CODE = A.DEPT_CODE
       GROUP BY DEPT_CODE) C2,
        (SELECT
              SUM(FN_INV_APPLY_ACTUAL(T2.REF_ID, T2.INV_USER))
         FROM TB_APP_MST_INT     T1,
              TB_MAPP_INVENTOR   T2,
              TB_USR_PATENT      T3,
              TB_APP_INT_CONSULT T4
        WHERE T1.PATTEAM_RCPT_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T1.REF_ID = T2.REF_ID
          AND T2.INV_USER = T3.USER_ID
          AND T4.REF_ID = T1.REF_ID
          AND T4.EXAM_RESULT = '1'
          AND T3.DEPT_CODE = A.DEPT_CODE
          AND T1.ACTR_SUM_TARGET_YN = '1'
       GROUP BY T3.DEPT_CODE) C3,
    (SELECT
              SUM(FN_INV_APPLY_ACTUAL(T2.REF_ID, T2.INV_USER))
         FROM TB_APP_MST       T1,
              TB_MAPP_INVENTOR T2,
              TB_USR_PATENT    T3,
              TB_APP_MST_INT   T4
        WHERE T1.INOUT_DIV = 'INT'
          AND T1.APP_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T1.OFFICE_SEND_DATE IS NOT NULL
          AND T1.REF_ID = T2.REF_ID
          AND T2.INV_USER = T3.USER_ID
          AND T4.REF_ID = T1.REF_ID
          AND T3.DEPT_CODE = A.DEPT_CODE
          AND T4.ACTR_SUM_TARGET_YN = '1'
          AND T1.RIGHT_DIV IN ('10','20')
        GROUP BY T3.DEPT_CODE) C4,
    (SELECT
              SUM(FN_INV_APPLY_ACTUAL(T2.REF_ID, T2.INV_USER))
         FROM TB_APP_MST       T1,
              TB_MAPP_INVENTOR T2,
              TB_USR_PATENT    T3,
              TB_APP_MST_INT   T4
        WHERE T1.INOUT_DIV = 'INT'
          AND T1.REG_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T1.REG_NO IS NOT NULL
          AND T1.ABD_YN = '0'
          AND T1.REF_ID = T2.REF_ID
          AND T2.INV_USER = T3.USER_ID
          AND T4.REF_ID = T1.REF_ID
          AND T3.DEPT_CODE = A.DEPT_CODE
          AND T4.ACTR_SUM_TARGET_YN = '1'
          AND T1.RIGHT_DIV IN ('10','20')
        GROUP BY T3.DEPT_CODE) C5,
        (SELECT
              SUM(FN_INV_APPLY_ACTUAL(T3.REF_ID, T3.INV_USER))
         FROM TB_APP_MST       T1,
              TB_APP_MST_EXT   T2,
              TB_MAPP_INVENTOR T3,
              TB_USR_PATENT    T4
        WHERE T1.INOUT_DIV = 'EXT'
          AND T1.REF_ID = T2.REF_ID
          AND T1.CRE_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T2.GRP_ID = T3.REF_ID
          AND T3.INV_USER = T4.USER_ID
          AND T4.DEPT_CODE = A.DEPT_CODE
          AND T1.RIGHT_DIV IN ('10','20')
        GROUP BY T4.DEPT_CODE) C6,
               (SELECT SUM(FN_INV_APPLY_ACTUAL(T2.REF_ID, T2.INV_USER))
         FROM TB_APP_MST_INT T1, TB_MAPP_INVENTOR T2, TB_USR_PATENT T3
        WHERE T1.PATTEAM_RCPT_DATE BETWEEN {@PLAN_YEAR}||'0101' AND {@PLAN_YEAR}||'1231'
          AND T1.REF_ID = T2.REF_ID
          AND T2.INV_USER = T3.USER_ID
          AND T3.DEPT_CODE = A.DEPT_CODE
          AND T1.ACTR_SUM_TARGET_YN = '1'
       GROUP BY T3.DEPT_CODE) C7
FROM
    TB_APP_PLAN_MGT A
WHERE A.DEPT_CODE NOT IN ('O000000020','66500','O000000033','66530','O000000017','O000000029'
                         ,'P0008','P0014','P0020','P0022','P0024','55310','O000000021','O000000028','35250','O000000014'
                         ,'35310','49400','O000000006','35620','00000','퇴사','O000000015','O000000040','35630')
GROUP BY DEPT_CODE
]]></query>

<query name="/retrieveMainTechChartList"><![CDATA[
SELECT DECODE(Z.TECH_CODE, 1, '반도체', 2, 'SOLAR CELL', 3, 'LCD', 4, 'OLED', 5, '공통',6,'기타', 7,'주요부품',8,'일반구성품') TECH_CODE,
       Z.KR, Z.US, Z.CN, Z.TW, Z.JP, Z.PCT, Z.EP, Z.DE
FROM (
SELECT KR.TECH_CODE
,NVL(KR.CNT,'0') KR
,NVL(US.CNT,'0') US
,NVL(CN.CNT,'0') CN
,NVL(TW.CNT,'0') TW
,NVL(JP.CNT,'0') JP
,NVL(PC.CNT,'0') PCT
,NVL(EP.CNT,'0') EP
,NVL(DE.CNT,'0') DE
FROM
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             ,TB_MAPP_APP_MAN B
WHERE A.REF_ID = B.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND B.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'INT'
AND A.COUNTRY_CODE ='KR'
AND A.ABD_YN != '1'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)KR,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='US'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)US
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='CN'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)CN
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='TW'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)TW
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='JP'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)JP
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='PC'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)PC
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='EP'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)EP
,
(SELECT TECH.TECH_CODE,COUNT(DISTINCT(US_APP.REF_ID))CNT
FROM
(SELECT A.* FROM TB_APP_MST A
             , TB_APP_MST_EXT B
             , TB_APP_EXT_GRP C
             , TB_MAPP_APP_MAN D
WHERE A.REF_ID = B.REF_ID
AND B.GRP_ID(+) = C.GRP_ID
AND C.GRP_ID = D.REF_ID
AND A.APP_NO IS NOT NULL
AND A.RIGHT_DIV IN ('10','20')
AND A.ABD_YN != '1'
AND D.APP_MAN_CODE IN ('P0006','P0016')
AND A.INOUT_DIV = 'EXT'
AND A.COUNTRY_CODE ='DE'
AND A.STATUS NOT IN ('10INT-0056','20INT-0056','10INT-0083','10EXT-0083') ) US_APP,
(SELECT SUBSTR(TECH_CODE,1,1)TECH_CODE,REF_ID
FROM TB_MAPP_TECH_CLS TECH
GROUP BY  SUBSTR(TECH_CODE,1,1),REF_ID)TECH
WHERE US_APP.REF_ID = TECH.REF_ID
GROUP BY TECH.TECH_CODE)DE
WHERE KR.TECH_CODE = US.TECH_CODE(+)
AND US.TECH_CODE = CN.TECH_CODE(+)
AND CN.TECH_CODE = TW.TECH_CODE(+)
AND TW.TECH_CODE = JP.TECH_CODE(+)
AND JP.TECH_CODE = PC.TECH_CODE(+)
AND PC.TECH_CODE = EP.TECH_CODE(+)
AND EP.TECH_CODE = DE.TECH_CODE(+)
 ORDER BY TECH_CODE ASC
 ) Z

]]></query>
<!-- 개인별 출원 리스트 상세 -->
<query name="/retrieveStatusByPersonPopApp"><![CDATA[
SELECT A.REF_ID
     , A.REF_NO
     , A.APP_NO
     , A.KO_APP_TITLE
     , A.OFFICE_RCPT_DATE
     , A.APP_DATE
     , A.REG_NO
     , A.REG_DATE
     , FN_OFFICE_NAME(A.OFFICE_CODE) OFFICE_NAME
     , FN_USER_NAME(A.JOB_MAN) JOB_MAN_NAME
     , FN_PAPER_NAME(A.STATUS) AS STATUS_NAME
     , FN_COM_CODE_NAME('EXT_APP_NEED_YN', B.EXT_APP_NEED_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) EXT_APP_NEED_YN_NAME
     , B.KEY_PAT_YN
     , FN_COM_CODE_NAME('YES_NO', B.KEY_PAT_YN, {@$LANG_CODE}, {@$DEFAULT_LANG_CODE}) KEY_PAT_YN_NAME
     , FN_INVENTOR_NAMES(A.REF_ID) INVENTOR_NAMES
FROM TB_APP_MST A
     , TB_APP_MST_INT B
     , TB_MAPP_INVENTOR INV
WHERE A.REF_ID = B.REF_ID(+)
AND A.REF_ID = INV.REF_ID
AND INV.INV_USER =  {@$USER_ID}
AND A.APP_NO IS NOT NULL
AND A.REG_NO IS NULL
AND A.ABD_YN <> '1'
]]></query>

</root>
